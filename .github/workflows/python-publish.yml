name: Python Package Release

on:
  release:
    types: [published]
  push:
    branches:
        - main 

permissions:
  contents: read
  packages: write 

jobs:
  test-mac:
    name: MacOS - Test on Multiple Python Versions
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12','3.13']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,tiktoken]" 

      - name: Run Script in Test Mode
        run: |
          pytest
        continue-on-error: true

  test-windows:
    name: Windows - Test on Multiple Python Versions
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12','3.13']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,tiktoken]" 

      - name: Run Script in Test Mode
        run: |
          pytest
        continue-on-error: true

  test-linux:
    name: Ubuntu - Test on Multiple Python Versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12','3.13']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,tiktoken]" 

      - name: Run Script in Test Mode
        run: |
          pytest
        continue-on-error: true
  
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: 
        - test-linux
        - test-windows
        - test-mac
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine

      - name: Build Release Distributions
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dist
          path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    permissions:
        id-token: write
    #environment:
    #  name: pypi
    if: >
      github.event_name == 'release' &&
      github.event.action == 'published' &&
      !github.event.release.prerelease

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist